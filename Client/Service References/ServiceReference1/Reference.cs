//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.artech.com/", ConfigurationName="ServiceReference1.CalculatorService")]
    public interface CalculatorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/ADD", ReplyAction="http://www.artech.com/CalculatorService/ADDResponse")]
        int ADD(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/ADD", ReplyAction="http://www.artech.com/CalculatorService/ADDResponse")]
        System.Threading.Tasks.Task<int> ADDAsync(int a, int b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/GetUsers", ReplyAction="http://www.artech.com/CalculatorService/GetUsersResponse")]
        System.Data.DataSet GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/GetUsers", ReplyAction="http://www.artech.com/CalculatorService/GetUsersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/GetUserInfoById", ReplyAction="http://www.artech.com/CalculatorService/GetUserInfoByIdResponse")]
        System.Data.DataSet GetUserInfoById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/GetUserInfoById", ReplyAction="http://www.artech.com/CalculatorService/GetUserInfoByIdResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUserInfoByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/SaveUser", ReplyAction="http://www.artech.com/CalculatorService/SaveUserResponse")]
        bool SaveUser(string username, string userpwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/SaveUser", ReplyAction="http://www.artech.com/CalculatorService/SaveUserResponse")]
        System.Threading.Tasks.Task<bool> SaveUserAsync(string username, string userpwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/DeleteUser", ReplyAction="http://www.artech.com/CalculatorService/DeleteUserResponse")]
        bool DeleteUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/DeleteUser", ReplyAction="http://www.artech.com/CalculatorService/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/UpdateUser", ReplyAction="http://www.artech.com/CalculatorService/UpdateUserResponse")]
        bool UpdateUser(string username, string userpwd, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/UpdateUser", ReplyAction="http://www.artech.com/CalculatorService/UpdateUserResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserAsync(string username, string userpwd, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/ByUserPwdAndUserName", ReplyAction="http://www.artech.com/CalculatorService/ByUserPwdAndUserNameResponse")]
        System.Data.DataSet ByUserPwdAndUserName(string name, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/ByUserPwdAndUserName", ReplyAction="http://www.artech.com/CalculatorService/ByUserPwdAndUserNameResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserPwdAndUserNameAsync(string name, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/ByUserNameUser", ReplyAction="http://www.artech.com/CalculatorService/ByUserNameUserResponse")]
        System.Data.DataSet ByUserNameUser(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.artech.com/CalculatorService/ByUserNameUser", ReplyAction="http://www.artech.com/CalculatorService/ByUserNameUserResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ByUserNameUserAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CalculatorServiceChannel : Client.ServiceReference1.CalculatorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorServiceClient : System.ServiceModel.ClientBase<Client.ServiceReference1.CalculatorService>, Client.ServiceReference1.CalculatorService {
        
        public CalculatorServiceClient() {
        }
        
        public CalculatorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int ADD(int a, int b) {
            return base.Channel.ADD(a, b);
        }
        
        public System.Threading.Tasks.Task<int> ADDAsync(int a, int b) {
            return base.Channel.ADDAsync(a, b);
        }
        
        public System.Data.DataSet GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUsersAsync() {
            return base.Channel.GetUsersAsync();
        }
        
        public System.Data.DataSet GetUserInfoById(int id) {
            return base.Channel.GetUserInfoById(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUserInfoByIdAsync(int id) {
            return base.Channel.GetUserInfoByIdAsync(id);
        }
        
        public bool SaveUser(string username, string userpwd) {
            return base.Channel.SaveUser(username, userpwd);
        }
        
        public System.Threading.Tasks.Task<bool> SaveUserAsync(string username, string userpwd) {
            return base.Channel.SaveUserAsync(username, userpwd);
        }
        
        public bool DeleteUser(int id) {
            return base.Channel.DeleteUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int id) {
            return base.Channel.DeleteUserAsync(id);
        }
        
        public bool UpdateUser(string username, string userpwd, int id) {
            return base.Channel.UpdateUser(username, userpwd, id);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserAsync(string username, string userpwd, int id) {
            return base.Channel.UpdateUserAsync(username, userpwd, id);
        }
        
        public System.Data.DataSet ByUserPwdAndUserName(string name, string pwd) {
            return base.Channel.ByUserPwdAndUserName(name, pwd);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserPwdAndUserNameAsync(string name, string pwd) {
            return base.Channel.ByUserPwdAndUserNameAsync(name, pwd);
        }
        
        public System.Data.DataSet ByUserNameUser(string name) {
            return base.Channel.ByUserNameUser(name);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ByUserNameUserAsync(string name) {
            return base.Channel.ByUserNameUserAsync(name);
        }
    }
}
